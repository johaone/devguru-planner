spring.config.import=optional:configserver:http://localhost:8890

server.port=8081

spring.application.name=planner-todo

spring.profiles.active=microservice, todo, sql, rabbitmq

#logging.level.org.springframework=info

# настройки соединения с БД
spring.datasource.url=jdbc:postgresql://localhost:5432/todo_affairs
spring.datasource.username=postgres
spring.datasource.password=johaone

# Ниже настройки для получения сообщения с рефлизацией legacy способа(интерфейсы и аннотации)

# destination - своего рода контейнер-обменник, принимающий и отправляющий message. Очереди анонимные - нельзя считать сообщения с админ консоли
spring.cloud.stream.bindings.todoInputChannel.destination=todo-exchange-channel

#group - группа очередей сообщений, в котором можно считывать сообщения из админ консоли RabbitMQ. Доступ и больше служебных действий
spring.cloud.stream.bindings.todoInputChannel.group=todo-exchange-group

# Добавление отдельной очереди, куда будет поступать все ошибочные сообщения
spring.cloud.stream.rabbit.bindings.todoInputChannel.consumer.auto-bind-dlq=true


# Настройки каналов для всех клиентов. Способ отправки сообщений с применением функционального кода
# Если бинов несколько, то через ";" можно их указать
spring.cloud.function.definition=newUserConsume
# out - отправляет сообщение, 0 - отправление первого парметра(индекс коллекции)
spring.cloud.stream.bindings.newUserConsume-in-0.destination=todo-exchange-channel
spring.cloud.stream.bindings.newUserConsume-in-0.group=todo-exchange-group

# настройки для логгирования всех приложений
logging.pattern.console=%C{1.} [%-5level] %d{HH:mm:ss} - %msg%n

# url, куда будет происходить регистрация микросервисов
eureka.client.service-url.defaultZone=http://localhost:8764/eureka

# Настройки актуатор
# Включение актуатор в gateway
management.endpoint.gateway.enabled=true
# какие endpoints надо включить в web
management.endpoints.web.exposure.include=*

# для добавления текста ошибки в Response
server.error.include-message=always



